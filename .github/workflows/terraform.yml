name: Terraform Infrastructure

on:
  workflow_dispatch:
    inputs:
      action:
        description: 'Select the Terraform action'
        required: true
        default: 'plan'
        type: choice
        options:
          - plan
          - apply
          - destroy

jobs:
  terraform:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./infra
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.5.0
      
      - name: Create service account key file
        run: |
          echo '${{ secrets.YC_SERVICE_ACCOUNT_KEY }}' > key.json
      
      - name: Terraform Init
        run: terraform init
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
          YC_SERVICE_ACCOUNT_KEY_FILE: key.json
      
      - name: Terraform Plan
        if: ${{ github.event.inputs.action == 'plan' }}
        run: terraform plan -var="cloud_id=${{ secrets.CLOUD_ID }}" -var="folder_id=${{ secrets.FOLDER_ID }}" -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="yandex_service_account_key=${{ secrets.YC_SERVICE_ACCOUNT_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
          YC_SERVICE_ACCOUNT_KEY_FILE: key.json
      
      - name: Terraform Apply
        if: ${{ github.event.inputs.action == 'apply' }}
        run: terraform apply -auto-approve -var="cloud_id=${{ secrets.CLOUD_ID }}" -var="folder_id=${{ secrets.FOLDER_ID }}" -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="yandex_service_account_key=${{ secrets.YC_SERVICE_ACCOUNT_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
          YC_SERVICE_ACCOUNT_KEY_FILE: key.json
      
      - name: Terraform Destroy
        if: ${{ github.event.inputs.action == 'destroy' }}
        run: terraform destroy -auto-approve -var="cloud_id=${{ secrets.CLOUD_ID }}" -var="folder_id=${{ secrets.FOLDER_ID }}" -var="ssh_public_key=${{ secrets.SSH_PUBLIC_KEY }}" -var="yandex_service_account_key=${{ secrets.YC_SERVICE_ACCOUNT_KEY }}"
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
          YC_SERVICE_ACCOUNT_KEY_FILE: key.json
      
      - name: Clean up
        if: always()
        run: rm -f key.json
